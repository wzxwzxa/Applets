<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.applet.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.lz.applet.entity.Comment">
    <id column="c_id" jdbcType="INTEGER" property="cId" />
    <result column="c_userid" jdbcType="VARCHAR" property="cUserid" />
    <result column="c_name" jdbcType="VARCHAR" property="cName" />
    <result column="c_contentid" jdbcType="INTEGER" property="cContentid" />
    <result column="c_createtime" jdbcType="VARCHAR" property="cCreatetime" />
    <result column="c_content" jdbcType="VARCHAR" property="cContent" />
    <result column="c_otherid" jdbcType="VARCHAR" property="cOtherid" />
    <result column="c_state" jdbcType="INTEGER" property="cState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    c_id, c_userid, c_name, c_contentid, c_createtime, c_content, c_otherid, c_state
  </sql>
  <select id="selectByExample" parameterType="com.lz.applet.entity.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where c_id = #{cId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where c_id = #{cId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lz.applet.entity.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="c_id" keyProperty="cId" parameterType="com.lz.applet.entity.Comment" useGeneratedKeys="true">
    insert into comment (c_userid, c_name, c_contentid, 
      c_createtime, c_content, c_otherid, 
      c_state)
    values (#{cUserid,jdbcType=VARCHAR}, #{cName,jdbcType=VARCHAR}, #{cContentid,jdbcType=INTEGER}, 
      #{cCreatetime,jdbcType=VARCHAR}, #{cContent,jdbcType=VARCHAR}, #{cOtherid,jdbcType=VARCHAR}, 
      #{cState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="c_id" keyProperty="cId" parameterType="com.lz.applet.entity.Comment" useGeneratedKeys="true">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cUserid != null">
        c_userid,
      </if>
      <if test="cName != null">
        c_name,
      </if>
      <if test="cContentid != null">
        c_contentid,
      </if>
      <if test="cCreatetime != null">
        c_createtime,
      </if>
      <if test="cContent != null">
        c_content,
      </if>
      <if test="cOtherid != null">
        c_otherid,
      </if>
      <if test="cState != null">
        c_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cUserid != null">
        #{cUserid,jdbcType=VARCHAR},
      </if>
      <if test="cName != null">
        #{cName,jdbcType=VARCHAR},
      </if>
      <if test="cContentid != null">
        #{cContentid,jdbcType=INTEGER},
      </if>
      <if test="cCreatetime != null">
        #{cCreatetime,jdbcType=VARCHAR},
      </if>
      <if test="cContent != null">
        #{cContent,jdbcType=VARCHAR},
      </if>
      <if test="cOtherid != null">
        #{cOtherid,jdbcType=VARCHAR},
      </if>
      <if test="cState != null">
        #{cState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lz.applet.entity.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.cUserid != null">
        c_userid = #{record.cUserid,jdbcType=VARCHAR},
      </if>
      <if test="record.cName != null">
        c_name = #{record.cName,jdbcType=VARCHAR},
      </if>
      <if test="record.cContentid != null">
        c_contentid = #{record.cContentid,jdbcType=INTEGER},
      </if>
      <if test="record.cCreatetime != null">
        c_createtime = #{record.cCreatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.cContent != null">
        c_content = #{record.cContent,jdbcType=VARCHAR},
      </if>
      <if test="record.cOtherid != null">
        c_otherid = #{record.cOtherid,jdbcType=VARCHAR},
      </if>
      <if test="record.cState != null">
        c_state = #{record.cState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set c_id = #{record.cId,jdbcType=INTEGER},
      c_userid = #{record.cUserid,jdbcType=VARCHAR},
      c_name = #{record.cName,jdbcType=VARCHAR},
      c_contentid = #{record.cContentid,jdbcType=INTEGER},
      c_createtime = #{record.cCreatetime,jdbcType=VARCHAR},
      c_content = #{record.cContent,jdbcType=VARCHAR},
      c_otherid = #{record.cOtherid,jdbcType=VARCHAR},
      c_state = #{record.cState,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lz.applet.entity.Comment">
    update comment
    <set>
      <if test="cUserid != null">
        c_userid = #{cUserid,jdbcType=VARCHAR},
      </if>
      <if test="cName != null">
        c_name = #{cName,jdbcType=VARCHAR},
      </if>
      <if test="cContentid != null">
        c_contentid = #{cContentid,jdbcType=INTEGER},
      </if>
      <if test="cCreatetime != null">
        c_createtime = #{cCreatetime,jdbcType=VARCHAR},
      </if>
      <if test="cContent != null">
        c_content = #{cContent,jdbcType=VARCHAR},
      </if>
      <if test="cOtherid != null">
        c_otherid = #{cOtherid,jdbcType=VARCHAR},
      </if>
      <if test="cState != null">
        c_state = #{cState,jdbcType=INTEGER},
      </if>
    </set>
    where c_id = #{cId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lz.applet.entity.Comment">
    update comment
    set c_userid = #{cUserid,jdbcType=VARCHAR},
      c_name = #{cName,jdbcType=VARCHAR},
      c_contentid = #{cContentid,jdbcType=INTEGER},
      c_createtime = #{cCreatetime,jdbcType=VARCHAR},
      c_content = #{cContent,jdbcType=VARCHAR},
      c_otherid = #{cOtherid,jdbcType=VARCHAR},
      c_state = #{cState,jdbcType=INTEGER}
    where c_id = #{cId,jdbcType=INTEGER}
  </update>
    <select id="selectByArticleId" resultMap="BaseResultMap">
         select * from comment where c_contentid = #{articleId}
    </select>
  <select id="selectAll" resultMap="BaseResultMap">
         select * from comment where c_state = #{state}
  </select>
    <select id="count" resultType="java.lang.Integer">
      SELECT COUNT(*) from comment
    </select>
  <select id="selectAllState" resultMap="BaseResultMap">
      select * from comment where c_state = #{state} ORDER BY c_createtime DESC
  </select>
  <select id="LeavingCount" resultType="int">
      select count(*) from comment where c_state = #{state}
  </select>
  <select id="backSelectAll" resultMap="BaseResultMap">
      select * from comment order by c_createtime desc
  </select>
  <select id="backGetCommentAll" resultMap="BaseResultMap">
      select * from comment order by c_createtime desc
  </select>
</mapper>